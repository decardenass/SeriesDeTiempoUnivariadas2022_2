knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Datos acciones Bancolombia DIARIAS (01-01-2017 al 31-12-2021)
url_1 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Bancolombia.csv'
# Datos precipitación MENSUALES (01-2000 al 08-2022)
url_2 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Datos%20precipitaci%C3%B3n%20mensual.csv'
df_1 = read.csv(url_1, sep=";")
df_2 = read.csv(url_2, sep=";")
df_1$Fecha = rev(as.Date(df_1$Fecha))
df_2$Fecha = as.Date(df_2$Fecha)
df_1.ts = ts(rev(df_1$`Último`), frequency = 244, start=c(2017, 01, 02))
plot.ts(df_1.ts, main = "Precio al cierre de acciones Bancolombia diario", xlab = "Tiempo", ylab = "Precio")
## ----- Diagrama de autocorrelación acciones Bancolombia ----- ###
acf(df_1['Último'], lag.max = NULL,
type = "correlation",
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación acciones Bancolombia")
## ----- Diagrama de autocorrelación parcial acciones Bancolombia ----- ###
pacf(df_1['Último'], lag.max = NULL,
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación parcial acciones Bancolombia")
summary(fit_df_1 <- lm(df_1.ts~time(df_1.ts), na.action=NULL))
# Gráfico con recta de tendencia
plot(df_1.ts, ylab="Precio accion")
abline(fit_df_1,col = "red") # Se añade la recta ajusta
###Eliminamos la tendencia con la predicción la recta
ElimiTenddf_1.ts=df_1.ts-predict(fit_df_1)
plot(ElimiTenddf_1.ts, ylab="Precio accion", main="Serie Bancolombia Sin tendencia")
TSstudio::ts_heatmap(ElimiTenddf_1.ts,title = "Mapa de Calor - acciones Bancolombia")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Datos acciones Bancolombia DIARIAS (01-01-2017 al 31-12-2021)
url_1 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Bancolombia.csv'
# Datos precipitación MENSUALES (01-2000 al 08-2022)
url_2 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Datos%20precipitaci%C3%B3n%20mensual.csv'
banco = read.csv(url_1, sep=";")
#df_2 = read.csv(url_2, sep=";")
banco$Fecha = rev(as.Date(banco$Fecha))
#df_2$Fecha = as.Date(df_2$Fecha)
banco.ts = ts(rev(banco$`Último`), frequency = 244, start=c(2017, 01, 02))
plot.ts(banco.ts, main = "Precio al cierre de acciones Bancolombia diario", xlab = "Tiempo", ylab = "Precio")
## ----- Diagrama de autocorrelación acciones Bancolombia ----- ###
acf(banco['Último'], lag.max = NULL,
type = "correlation",
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación acciones Bancolombia")
## ----- Diagrama de autocorrelación parcial acciones Bancolombia ----- ###
pacf(banco['Último'], lag.max = NULL,
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación parcial acciones Bancolombia")
summary(fit_banco <- lm(banco.ts~time(banco.ts), na.action=NULL))
# Gráfico con recta de tendencia
plot(banco.ts, ylab="Precio accion")
abline(fit_banco,col = "red") # Se añade la recta ajusta
###Eliminamos la tendencia con la predicción la recta
ElimiTendbanco.ts=banco.ts-predict(fit_banco)
plot(ElimiTendbanco.ts, ylab="Precio accion", main="Serie Bancolombia Sin tendencia")
TSstudio::ts_heatmap(ElimiTendbanco.ts,title = "Mapa de Calor - acciones Bancolombia")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Datos acciones Bancolombia DIARIAS (01-01-2017 al 31-12-2021)
url_1 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Bancolombia.csv'
# Datos precipitación MENSUALES (01-2000 al 08-2022)
url_2 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Datos%20precipitaci%C3%B3n%20mensual.csv'
banco = read.csv(url_1, sep=";")
#df_2 = read.csv(url_2, sep=";")
banco$Fecha = rev(as.Date(banco$Fecha))
#df_2$Fecha = as.Date(df_2$Fecha)
banco.ts = ts(rev(banco$`Último`), frequency = 244, start=c(2017, 01, 02))
plot.ts(banco.ts, main = "Precio al cierre de acciones Bancolombia diario", xlab = "Tiempo", ylab = "Precio")
## ----- Diagrama de autocorrelación acciones Bancolombia ----- ###
acf(banco['Último'], lag.max = NULL,
type = "correlation",
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación acciones Bancolombia")
## ----- Diagrama de autocorrelación parcial acciones Bancolombia ----- ###
pacf(banco['Último'], lag.max = NULL,
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación parcial acciones Bancolombia")
summary(fit_banco <- lm(banco.ts~time(banco.ts), na.action=NULL))
# Gráfico con recta de tendencia
plot(banco.ts, ylab="Precio accion")
abline(fit_banco,col = "red") # Se añade la recta ajusta
###Eliminamos la tendencia con la predicción la recta
ElimiTendbanco.ts=banco.ts-predict(fit_banco)
plot(ElimiTendbanco.ts, ylab="Precio accion", main="Serie Bancolombia Sin tendencia")
library(TSstudio)
library(tidyverse)
library(lubridate)
library(timetk)
library(tsibble)
interactive <- FALSE
#Para validar si la tendencia es lineal o no
indice_cierre = banco$Fecha
df_cierre = data.frame(Fecha=indice_cierre,Precio_cierre=as.matrix(banco$Último))
str(df_cierre)
tibble_cierre = tibble(df_cierre)
duplicates(tibble_cierre, key = NULL, index = Fecha)##NO hay registros duplicados
print(duplicates(tibble_cierre, key = NULL, index=Fecha))
tsibble_cierre=tsibble(tibble_cierre,index=Fecha)
tsibble_cierre
tsibble_cierre%>%timetk::plot_time_series(Fecha, Precio_cierre,
.interactive = interactive,
.plotly_slider = TRUE)
tibble_cierre%>%mutate(Precio_cierre_ajus=smooth_vec(Precio_cierre,span = 0.75, degree = 2))
tsibble_cierre%>%mutate(Precio_cierre_ajus=smooth_vec(Precio_cierre,span = 0.75, degree = 2))%>%
ggplot(aes(Fecha, Precio_cierre)) +
geom_line() +
geom_line(aes(y = Precio_cierre_ajus), color = "red")
cierre_decomp= decompose(banco.ts)
plot(cierre_decomp)
cierre_decomp$trend
TSstudio::ts_heatmap(ElimiTendbanco.ts,title = "Mapa de Calor - acciones Bancolombia")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Datos acciones Bancolombia DIARIAS (01-01-2017 al 31-12-2021)
url_1 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Bancolombia.csv'
# Datos precipitación MENSUALES (01-2000 al 08-2022)
url_2 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Datos%20precipitaci%C3%B3n%20mensual.csv'
df_1 = read.csv(url_1, sep=";")
df_2 = read.csv(url_2, sep=";")
df_1$Fecha = rev(as.Date(df_1$Fecha))
df_2$Fecha = as.Date(df_2$Fecha)
df_2.ts = ts(df_2$`Valor`, frequency = 12, start=c(2000, 1))
plot.ts(df_2.ts, main = "Precipitación mensual", xlab = "Tiempo", ylab = "Pm")
## ----- Diagrama de autocorrelación precipitaciones ----- ###
acf(df_2['Valor'], lag.max = NULL,
type = "correlation",
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación precipitaciones")
## ----- Diagrama de autocorrelación parcial precipitaciones ----- ###
pacf(df_2['Valor'], lag.max = NULL,
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación parcial precipitaciones")
summary(fit_df_2 <- lm(df_2.ts~time(df_2.ts), na.action=NULL))
# Gráfico con recta de tendencia
plot(df_2.ts, ylab="Pm")
abline(fit_df_2,col = "red") # Se añade la recta ajusta
###Eliminamos la tendencia con la predicción la recta
ElimiTenddf_2.ts=df_2.ts-predict(fit_df_2)
plot(ElimiTenddf_2.ts,main="Serie lluvias Sin tendencia", ylab="Pm")
library(TSstudio)
ts_heatmap(ElimiTenddf_2.ts,title = "Mapa de Calor - Lluvias")
library(dplyr)
#TSstudio::ts_heatmap(ElimiTendbanco.ts,title = "Mapa de Calor - acciones Bancolombia")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Datos acciones Bancolombia DIARIAS (01-01-2017 al 31-12-2021)
url_1 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Bancolombia.csv'
# Datos precipitación MENSUALES (01-2000 al 08-2022)
url_2 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Datos%20precipitaci%C3%B3n%20mensual.csv'
#df_1 = read.csv(url_1, sep=";")
lluvia = read.csv(url_2, sep=";")
#df_1$Fecha = rev(as.Date(df_1$Fecha))
lluvia$Fecha = as.Date(lluvia$Fecha)
lluvia.ts = ts(lluvia$`Valor`, frequency = 12, start=c(2000, 1))
plot.ts(lluvia.ts, main = "Precipitación mensual", xlab = "Tiempo", ylab = "Pm")
## ----- Diagrama de autocorrelación precipitaciones ----- ###
acf(lluvia['Valor'], lag.max = NULL,
type = "correlation",
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación precipitaciones")
## ----- Diagrama de autocorrelación parcial precipitaciones ----- ###
pacf(lluvia['Valor'], lag.max = NULL,
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación parcial precipitaciones")
summary(fit_lluvia <- lm(lluvia.ts~time(lluvia.ts), na.action=NULL))
# Gráfico con recta de tendencia
plot(lluvia.ts, ylab="Pm")
abline(fit_lluvia,col = "red") # Se añade la recta ajusta
###Eliminamos la tendencia con la predicción la recta
ElimiTendlluvia.ts=lluvia.ts-predict(fit_lluvia)
plot(ElimiTendlluvia.ts,main="Serie lluvias Sin tendencia", ylab="Pm")
library(TSstudio)
ts_heatmap(ElimiTendlluvia.ts,title = "Mapa de Calor - Lluvias")
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Datos acciones Bancolombia DIARIAS (01-01-2017 al 31-12-2021)
url_1 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Bancolombia.csv'
# Datos precipitación MENSUALES (01-2000 al 08-2022)
url_2 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Datos%20precipitaci%C3%B3n%20mensual.csv'
banco = read.csv(url_1, sep=";")
#df_2 = read.csv(url_2, sep=";")
banco$Fecha = rev(as.Date(banco$Fecha))
#df_2$Fecha = as.Date(df_2$Fecha)
banco.ts = ts(rev(banco$`Último`), frequency = 244, start=c(2017, 01, 02))
plot.ts(banco.ts, main = "Precio al cierre de acciones Bancolombia diario", xlab = "Tiempo", ylab = "Precio")
## ----- Diagrama de autocorrelación acciones Bancolombia ----- ###
acf(banco['Último'], lag.max = NULL,
type = "correlation",
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación acciones Bancolombia")
## ----- Diagrama de autocorrelación parcial acciones Bancolombia ----- ###
pacf(banco['Último'], lag.max = NULL,
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación parcial acciones Bancolombia")
summary(fit_banco <- lm(banco.ts~time(banco.ts), na.action=NULL))
# Gráfico con recta de tendencia
plot(banco.ts, ylab="Precio accion")
abline(fit_banco,col = "red") # Se añade la recta ajusta
###Eliminamos la tendencia con la predicción la recta
ElimiTendbanco.ts=banco.ts-predict(fit_banco)
plot(ElimiTendbanco.ts, ylab="Precio accion", main="Serie Bancolombia Sin tendencia")
library(TSstudio)
library(tidyverse)
library(lubridate)
library(timetk)
library(tsibble)
interactive <- FALSE
#Para validar si la tendencia es lineal o no
indice_cierre = banco$Fecha
df_cierre = data.frame(Fecha=indice_cierre,Precio_cierre=as.matrix(banco$Último))
str(df_cierre)
tibble_cierre = tibble(df_cierre)
duplicates(tibble_cierre, key = NULL, index = Fecha)##NO hay registros duplicados
print(duplicates(tibble_cierre, key = NULL, index=Fecha))
tsibble_cierre=tsibble(tibble_cierre,index=Fecha)
tsibble_cierre
tsibble_cierre%>%timetk::plot_time_series(Fecha, Precio_cierre,
.interactive = interactive,
.plotly_slider = TRUE)
tibble_cierre%>%mutate(Precio_cierre_ajus=smooth_vec(Precio_cierre,span = 0.75, degree = 2))
tsibble_cierre%>%mutate(Precio_cierre_ajus=smooth_vec(Precio_cierre,span = 0.75, degree = 2))%>%
ggplot(aes(Fecha, Precio_cierre)) +
geom_line() +
geom_line(aes(y = Precio_cierre_ajus), color = "red")
cierre_decomp= decompose(banco.ts)
plot(cierre_decomp)
cierre_decomp$trend
#TSstudio::ts_heatmap(ElimiTendbanco.ts,title = "Mapa de Calor - acciones Bancolombia")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# Datos acciones Bancolombia DIARIAS (01-01-2017 al 31-12-2021)
url_1 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Bancolombia.csv'
# Datos precipitación MENSUALES (01-2000 al 08-2022)
url_2 = 'https://raw.githubusercontent.com/decardenass/SeriesDeTiempoUnivariadas2022_2/main/Proyecto/Datos/Datos%20precipitaci%C3%B3n%20mensual.csv'
#df_1 = read.csv(url_1, sep=";")
lluvia = read.csv(url_2, sep=";")
#df_1$Fecha = rev(as.Date(df_1$Fecha))
lluvia$Fecha = as.Date(lluvia$Fecha)
lluvia.ts = ts(lluvia$`Valor`, frequency = 12, start=c(2000, 1))
plot.ts(lluvia.ts, main = "Precipitación mensual", xlab = "Tiempo", ylab = "Pm")
## ----- Diagrama de autocorrelación precipitaciones ----- ###
acf(lluvia['Valor'], lag.max = NULL,
type = "correlation",
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación precipitaciones")
## ----- Diagrama de autocorrelación parcial precipitaciones ----- ###
pacf(lluvia['Valor'], lag.max = NULL,
plot = TRUE,
na.action = na.fail,
main = "Autocorrelación parcial precipitaciones")
summary(fit_lluvia <- lm(lluvia.ts~time(lluvia.ts), na.action=NULL))
# Gráfico con recta de tendencia
plot(lluvia.ts, ylab="Pm")
abline(fit_lluvia,col = "red") # Se añade la recta ajusta
###Eliminamos la tendencia con la predicción la recta
ElimiTendlluvia.ts=lluvia.ts-predict(fit_lluvia)
plot(ElimiTendlluvia.ts,main="Serie lluvias Sin tendencia", ylab="Pm")
library(TSstudio)
ts_heatmap(ElimiTendlluvia.ts,title = "Mapa de Calor - Lluvias")
library(dplyr)
